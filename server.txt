import socket
import threading

# Server configuration
SERVER_HOST = '0.0.0.0'  # Listen on all available interfaces
SERVER_PORT = 5000  # Main chat port
clients = []

# Function to broadcast messages to all clients
def broadcast(message, sender_socket=None):
    for client in clients:
        if client != sender_socket:
            try:
                client.send(message)
            except:
                remove_client(client)

# Function to handle each client connection
def handle_client(client_socket, addr):
    print(f"New connection from {addr}")
    clients.append(client_socket)

    while True:
        try:
            message = client_socket.recv(1024)
            if message:
                print(f"Received: {message.decode()} from {addr}")
                broadcast(message, client_socket)
            else:
                remove_client(client_socket)
                break
        except:
            remove_client(client_socket)
            break

# Remove disconnected clients
def remove_client(client_socket):
    if client_socket in clients:
        clients.remove(client_socket)
        print("A client has disconnected.")

# Main server function
def start_server():
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((SERVER_HOST, SERVER_PORT))
    server_socket.listen()
    print(f"Server started on {SERVER_HOST}:{SERVER_PORT}")

    while True:
        client_socket, addr = server_socket.accept()
        client_thread = threading.Thread(target=handle_client, args=(client_socket, addr))
        client_thread.start()

if __name__ == "__main__":
    start_server()
